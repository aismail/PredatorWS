<project name="sedemo2011" basedir=".">

	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="libsrc.dir" value="${lib.dir}/src"/>
	<property name="proj.dir" value="${basedir}/projects"/>
	<property name="MATLAB_ROOT" value="/usr/local/MATLAB/R2011a"/>

	<!-- Run the Guardian application. -->
	<target name="run-Guardian" depends="compile-Guardian">
		<exec executable="${proj.dir}/Guardian/run_Guardian.sh"
			dir="${proj.dir}/Guardian">
			<env key="JASON_ROOT" value="${lib.dir}/jason"/>
			<env key="HYPERMEDIA_ROOT" value="${lib.dir}/hypermedia"/>
			<env key="PROCESSING_ROOT" value="${lib.dir}/processing"/>
			<env key="LIBOPENTLD4J_ROOT" value="${lib.dir}/libopentld4j"/>
			<env key="LIBOPENTLD_ROOT" value="${lib.dir}/libopentld"/>
			<env key="JSON_ROOT" value="${lib.dir}/json"/>
			<env key="FACE4J_ROOT" value="${lib.dir}/face4j"/>
			<env key="MISC_JARS_ROOT" value="${lib.dir}/misc"/>
			<env key="MCR_ROOT" value="${MATLAB_ROOT}"/>
			<env key="CARTAGO_ROOT" value="${lib.dir}/cartago"/>
		</exec>
	</target>

	<!-- Compile Guardian, the screen-locking applications with 
	     dynamic face tracking and identification -->
	<target name="compile-Guardian" depends="cleanup-Guardian,compile-libopentld4j,compile-hypermedia,compile-face4j">
		<javac srcdir="${proj.dir}/Guardian/src"
			destdir="${proj.dir}/Guardian/build">
			<classpath>
				<pathelement path="${lib.dir}/libopentld4j"/>
				<pathelement path="${lib.dir}/hypermedia"/>
				<pathelement path="${lib.dir}/processing"/>
				<pathelement location="${lib.dir}/jason/lib/jason.jar"/>
				<fileset dir="${lib.dir}/misc">
				  <include name="*.jar" />
				</fileset>
				<pathelement path="${lib.dir}/json"/>
				<pathelement path="${lib.dir}/face4j"/>
				<fileset dir="${lib.dir}/cartago">
				  <include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="cleanup-Guardian" depends="cleanup-libopentld4j">
	  <delete>
	    <fileset dir="${proj.dir}/Guardian" includes="bb*.txt"/>
	    <fileset dir="${proj.dir}/Guardian" includes="**/*.class"/>
	    <fileset dir="${proj.dir}/Guardian" defaultexcludes="false" includes="**/*~"/>
	    <fileset dir="${proj.dir}/Guardian" includes="frame*.png"/>	    
	  </delete>
	  <delete file="${proj.dir}/Guardian/temp/init.txt" />
	  <delete file="${proj.dir}/Guardian/.stop___MAS" />
	  <delete includeemptydirs="true">
	    <fileset dir="${proj.dir}/Guardian/build" includes="**/*"/>
	    <fileset dir="${proj.dir}/Guardian/temp" includes="**/*"/>
	  </delete>
	  <delete includeemptydirs="true" quiet="true">
	    <fileset dir="${proj.dir}/Guardian/_output" />
	  </delete>
	</target>
	
	<!-- Compile hypermedia, the bridge between Java and OpenCV.
	     Note: this library depends on a part of the processing library -->
	<target name="compile-hypermedia" depends="cleanup-hypermedia,compile-processing">
		<javac srcdir="${libsrc.dir}/hypermedia/java"
			destdir="${lib.dir}/hypermedia"
			classpath="${lib.dir}/processing"/>
		<exec executable="make"
			dir="${libsrc.dir}/hypermedia/native"/>
		<move file="${libsrc.dir}/hypermedia/native/libOpenCV.so"
			toDir="${lib.dir}/hypermedia"/>
	</target>

	<target name="cleanup-hypermedia">
		<delete dir="${lib.dir}/hypermedia"/>
		<mkdir dir="${lib.dir}/hypermedia"/>
	</target>

	<!-- Compile a part of the processing library, a dependency for the
	     bridge between OpenCV and Java, called hypermedia. -->
	<target name="compile-processing" depends="cleanup-processing">
		<javac srcdir="${libsrc.dir}/processing"
			destdir="${lib.dir}/processing"/>
	</target>

	<target name="cleanup-processing">
		<delete dir="${lib.dir}/processing"/>
		<mkdir dir="${lib.dir}/processing"/>
	</target>
	
	<!-- Compile face4j, a JAVA API for 'face.com'. -->
	<target name="compile-face4j" depends="cleanup-face4j,compile-json">
		<javac srcdir="${libsrc.dir}/face4j"
			destdir="${lib.dir}/face4j">
		  <classpath>
		    <fileset dir="${lib.dir}/misc" >
		      <include name="*.jar" />
		    </fileset>
		    <pathelement path="${lib.dir}/json"/>
		  </classpath>
		</javac>
	</target>

	<target name="cleanup-face4j">
		<delete dir="${lib.dir}/face4j"/>
		<mkdir dir="${lib.dir}/face4j"/>
	</target>

	<!-- Compile JSON, needed for some JavaScript-related stuff by face4j. -->
	<target name="compile-json" depends="cleanup-json">
		<javac srcdir="${libsrc.dir}/json"
			destdir="${lib.dir}/json"/>
	</target>

	<target name="cleanup-json">
		<delete dir="${lib.dir}/json"/>
		<mkdir dir="${lib.dir}/json"/>
	</target>


	<!-- Compile the bridge library between libopentld "native" C library and Java -->
	<target name="compile-libopentld4j">
		<javac srcdir="${libsrc.dir}/libopentld4j/java"
			destdir="${lib.dir}/libopentld4j"/>
		<javah class="libopentld4j.OpenTLD4j"
			destDir="${libsrc.dir}/libopentld4j/native"
			classpath="${lib.dir}/libopentld4j"
			verbose="true"/>
		<exec executable="make"
			dir="${libsrc.dir}/libopentld4j/native">
			<env key="LIBOPENTLD_DIR" value="${lib.dir}/libopentld"/>
			<env key="JAVA_INCLUDE_DIR1" value="/usr/lib/jvm/java-6-sun/include"/>
			<env key="JAVA_INCLUDE_DIR2" value="/usr/lib/jvm/java-6-sun/include/linux"/>
		</exec>
		<move file="${libsrc.dir}/libopentld4j/native/libopentld4j_OpenTLD4j.so"
			toDir="${lib.dir}/libopentld4j"/>
	</target>

	<target name="cleanup-libopentld4j">
		<delete dir="${lib.dir}/libopentld4j"/>
		<mkdir dir="${lib.dir}/libopentld4j"/>
	</target>

	<!-- libopentld example in C -->
	<target name="compile-libopentld-example" depends="cleanup-libopentld-example">
		<exec executable="make"
			dir="${proj.dir}/libopentld-example">
			<env key="LIBOPENTLD_DIR" value="${lib.dir}/libopentld"/>
		</exec>
	</target>

	<target name="cleanup-libopentld-example">
		<exec executable="make"
			dir="${proj.dir}/libopentld-example">
			<env key="OPENTLD_DIR" value="${lib.dir}/libopentld"/>
			<arg value="clean"/>
		</exec>
	</target>

	<!-- OpenCV examples in C -->
	<target name="compile-OpenCV-examples" depends="cleanup-OpenCV-examples">
		<exec executable="make"
			dir="${proj.dir}/OpenCV-examples">
		</exec>
	</target>

	<target name="cleanup-OpenCV-examples">
		<exec executable="make"
			dir="${proj.dir}/OpenCV-examples">
			<arg value="clean"/>
		</exec>
	</target>

	<!-- Compile OpenTLD from Matlab code to a shared C library. -->
	<target name="compile-libopentld" depends="cleanup-libopentld">
		<exec executable="make"
			dir="${libsrc.dir}/libopentld">
		</exec>
		<move file="${libsrc.dir}/libopentld/libopentld.so" toDir="${lib.dir}/libopentld"/>
		<move file="${libsrc.dir}/libopentld/libopentld.h" toDir="${lib.dir}/libopentld"/>
		<move file="${libsrc.dir}/libopentld/libopentld.c" toDir="${lib.dir}/libopentld"/>
		<move file="${libsrc.dir}/libopentld/libopentld.exports" toDir="${lib.dir}/libopentld"/>
	</target>

	<target name="cleanup-libopentld">
		<delete dir="${lib.dir}/libopentld"/>
		<mkdir dir="${lib.dir}/libopentld"/>
	</target>

</project>
